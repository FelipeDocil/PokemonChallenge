/**
    This code is autogenerated using Capriccio 1.1.0 - https://github.com/shibapm/capriccio
    Implement the missing code in a extension, i.e.

    ```
    extension XCTestCase {
        func step<step name>() {}
    }
    ```

    DO NOT EDIT
*/
import XCTest

/**
Feature:
    Search a Pokemon
*/

class SearchAPokemonFeatureTest: XCTestCase {
    override func setUp() {
        super.setUp()
        
        continueAfterFailure = false
    }
    
    override func tearDown() {
        super.tearDown()
    }
     
    func testScenario_UserCanSearchAPokemon() {
        launchScenarioUserCanSearchAPokemon()
        stepUserIsOnThePokemonListScreen()
        stepUserSearchesForAnExistentPokemon()
        stepUserCanSeeAListWithOnlyThisPokemon()
    }  
    func testScenario_UserSeesAnEmptyListIfSearchForAnInexistentPokemon() {
        launchScenarioUserSeesAnEmptyListIfSearchForAnInexistentPokemon()
        stepUserIsOnThePokemonListScreen()
        stepUserSearchesForAnInexistentPokemon()
        stepUserSeesAnEmptyList()
    }  
    func testScenario_UserCanSeeADetailOfASearchPokemon() {
        launchScenarioUserCanSeeADetailOfASearchPokemon()
        stepUserIsOnThePokemonListScreen()
        stepUserSearchesForAnExistentPokemon()
        stepUserClicksOnAPokemonOnTheList()
        stepUserIsOnThePokemonDetailScreen()
    }  
    func testScenario_UserCanSeeADetailOfASearchShinyPokemon() {
        launchScenarioUserCanSeeADetailOfASearchShinyPokemon()
        stepUserIsOnThePokemonListScreen()
        stepUserSearchesForAnExistentPokemon()
        stepUserClicksOnTheSwitch()
        stepUserClicksOnAPokemonOnTheList()
        stepUserIsOnThePokemonDetailScreenOfAShinyPokemon()
    } 
}
